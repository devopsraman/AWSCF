{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description": "Rackspace Hosting - VPN Setup Template. http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html",
  "Metadata": {
    "Version": "v0.1.2",
    "Comments": "Generated by Ansible"
  },
  "Parameters": {
    "CustomerIP": {
      "Description": "The IP address of the Customer Endpoint, in CIDR notation",
      "Type": "String",
      "MinLength": "7",
      "MaxLength": "18",
      "Default": "0.0.0.0",
      "AllowedPattern": "^([0-9]+\\.){3}[0-9]+",
      "ConstraintDescription": "Must be a valid CIDR range of the form x.x.x.x"
    },
    "VPCID" : {
      "Type" : "AWS::EC2::VPC::Id",
      "Description" : "Select Virtual Private Cloud ID"
    },
    "ExistingVGWId": {
      "Description": "Leave blank unless you already have an existing VGW attached in the VPC you're creating this VPN Connection in.",
      "Type": "String",
      "Default": ""
    },
    "ExistingCGWId": {
      "Description": "Leave blank unless you already have an existing CGW attached in the VPC you're creating this VPN Connection in.",
      "Type": "String",
      "Default": ""
    },
    "DefaultStaticRoute": {
      "Type": "String",
      "Description": "This is the internal subnet IP Cidr on the customer side. Leave the default value if you do not intend to set a static route.",
      "MinLength": "7",
      "MaxLength": "18",
      "AllowedPattern": "^([0-9]+\\.){3}[0-9]+\\/[0-9]+$",
      "ConstraintDescription": "Must be a valid CIDR range of the form x.x.x.x/x",
      "Default": "127.0.0.1/32"
    },
    "PropagateRoutesTo": {
      "Type": "CommaDelimitedList",
      "Description": "A comma separated list of route tables you would like to propagate the VPN Route to.",
      "Default": ""
    },
    "Environment": {
      "Description": "Application environment for which this network is being created. e.g. Development/Production.",
      "Type": "String",
      "Default": "Development",
      "AllowedValues": ["Development", "Integration", "PreProduction", "Production", "Staging", "Test"]
    }
  },
  "Conditions": {
    "SetStaticRoute": { "Fn::Not": [{"Fn::Equals": [{ "Ref": "DefaultStaticRoute" }, "127.0.0.1/32"]}] },
    "PropagateRoutes": {
      "Fn::And": [
        { "Fn::Not": [{"Fn::Equals": [{"Fn::Select": ["0", { "Ref": "PropagateRoutesTo" }]}, ""]}]},
        { "Fn::Equals": [{ "Ref": "ExistingVGWId" }, ""]}
      ]
    },
    "CreateNewVGW": { "Fn::Equals": [{ "Ref": "ExistingVGWId" }, ""] },
    "CreateNewCGW": { "Fn::Equals": [{ "Ref": "ExistingCGWId" }, ""] }
  },
  "Resources" : {
    "VPNConnection" : {
       "Type" : "AWS::EC2::VPNConnection",
       "Properties" : {
        "Type" : "ipsec.1",
        "StaticRoutesOnly" : { "Fn::If": [ "SetStaticRoute", "True", "False" ] },
        "CustomerGatewayId" : { "Fn::If": [ "CreateNewCGW", { "Ref": "CustomerGateway" }, { "Ref": "ExistingCGWId" } ] },
        "VpnGatewayId" : { "Fn::If": [ "CreateNewVGW", { "Ref": "VPNGateway" }, { "Ref": "ExistingVGWId" } ] },
        "Tags" : [
          { "Key": "Name", "Value": { "Fn::Join" : ["", [{ "Ref" : "AWS::StackName" }, "-VPN"]] }},
          { "Key": "ServiceProvider", "Value": "Rackspace"},
          { "Key": "Environment", "Value": { "Ref": "Environment"} }
        ]
       }
    },
    "VPNConnectionRoute": {
      "Type": "AWS::EC2::VPNConnectionRoute",
      "Condition": "SetStaticRoute",
      "DependsOn": "VPNConnection",
      "Properties": {
        "DestinationCidrBlock": { "Ref": "DefaultStaticRoute" },
        "VpnConnectionId": { "Ref": "VPNConnection" }
      }
    },
    "VPNGateway" : {
      "Type" : "AWS::EC2::VPNGateway",
      "Condition": "CreateNewVGW",
      "Properties" : {
        "Type" : "ipsec.1",
        "Tags" : [
          { "Key": "Name", "Value": { "Ref" : "AWS::StackName" } },
          { "Key": "ServiceProvider", "Value": "Rackspace"},
          { "Key": "Environment", "Value": { "Ref": "Environment"} }
        ]
      }
    },
    "AttachVpnGateway" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Condition": "CreateNewVGW",
      "Properties" : {
        "VpcId" : { "Ref" : "VPCID" },
        "VpnGatewayId" : { "Ref": "VPNGateway" }
      }
    },
    "VPNRoutePropagation": {
      "Type": "AWS::EC2::VPNGatewayRoutePropagation",
      "DependsOn": "AttachVpnGateway",
      "Condition": "PropagateRoutes",
      "Properties": {
        "RouteTableIds":  { "Ref": "PropagateRoutesTo" },
        "VpnGatewayId" : { "Fn::If": [ "CreateNewVGW", { "Ref": "VPNGateway" }, { "Ref": "ExistingVGWId" } ] }
      }
    },
    "CustomerGateway" : {
      "Type" : "AWS::EC2::CustomerGateway",
      "Condition": "CreateNewCGW",
      "Properties" : {
        "Type" : "ipsec.1",
        "BgpAsn" : "65000",
        "IpAddress" : { "Ref": "CustomerIP" },
          "Tags" : [
            { "Key": "Name", "Value": "CustomerGateway"},
            { "Key": "ServiceProvider", "Value": "Rackspace"},
            { "Key": "Environment", "Value": { "Ref": "Environment"} }
          ]
      }
    }
  },
  "Outputs": {
    "outputCustomerGatewayId": { "Condition": "CreateNewCGW", "Value": { "Ref": "CustomerGateway" } },
    "outputVirtualPrivateGatewayId": { "Condition": "CreateNewVGW", "Value": { "Ref": "VPNGateway" } }
  }
}