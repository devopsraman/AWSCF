{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Master template for a 3 ASG set of Ubutu 14.04LTS auto scale groups.",
  "Metadata": {
    "Version": {
      "Version": "V1.0.0"
    },
    "Comments": {
      "Comments": "Generated by Ansible"
    }
  },
  "Parameters": {
    "Environment": {
      "Default": "Development",
      "Type": "String",
      "Description": "Application environment for which this network is being created. e.g. Development/Production.",
      "AllowedValues": ["Development", "Integration", "PreProduction", "Production", "Staging", "Test"]
    },
    "App1ImageId": {
      "Type": "String",
      "Description": "the id of an ami."
    },
    "App3ImageId": {
      "Type": "String",
      "Description": "the id of an ami."
    },
    "App2ImageId": {
      "Type": "String",
      "Description": "the id of an ami."
    },
    "S3TemplateBucketName": {
      "Type": "String",
      "Description": "The name of the S3 bucket in which the environment is being deployed"
    }
  },
  "Mappings": {

  },
  "Conditions": {

  },
  "Resources": {
    "App3": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": ["/", ["https://s3.amazonaws.com", {"Ref": "S3TemplateBucketName"}, "Ubuntu1404ASG.template"]]
        },
        "Parameters": {
          "ELBSecurityGroupList": {"Fn::GetAtt": ["SecurityGroup", "Outputs.outputPublicWebSecurityGroup"]},
          "VPCID": {"Fn::GetAtt": ["BaseNetwork", "Outputs.outputVPCID"]},
          "ScalingCreateTimeOut": "30M",
          "ELBSubnet": {"Fn::Join": [",", [{"Fn::GetAtt": ["BaseNetwork", "Outputs.outputSubnetPublicAZ1"]}, {"Fn::GetAtt": ["BaseNetwork", "Outputs.outputSubnetPublicAZ2"]}]]},
          "EbsVolumeSize": 20,
          "ScalingNotificationEmail": "noemail@domain.com",
          "AppSubnet": {"Fn::Join": [",", [{"Fn::GetAtt": ["BaseNetwork", "Outputs.outputSubnetPrivateAZ1"]}, {"Fn::GetAtt": ["BaseNetwork", "Outputs.outputSubnetPrivateAZ2"]}]]},
          "ImageId": {"Ref": "App3ImageId"},
          "KeyName": "CircleCI",
          "ASGSecurityGroupList": {"Fn::Join": [",", [{"Fn::GetAtt": ["SecurityGroup", "Outputs.outputPrivateWebSecurityGroup"]}, {"Fn::GetAtt": ["SecurityGroup", "Outputs.outputPrivateSSHSecurityGroup"]}]]},
          "ScalingMin": 1,
          "ScalingMax": 2,
          "APPGroupName": "App3"
        }
      }
    },
    "BaseNetwork": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": ["/", ["https://s3.amazonaws.com", {"Ref": "S3TemplateBucketName"}, "BaseNetwork.template"]]
        },
        "Parameters": {
          "Environment": {"Ref": "Environment"}
        }
      }
    },
    "App1": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": ["/", ["https://s3.amazonaws.com", {"Ref": "S3TemplateBucketName"}, "Ubuntu1404ASG.template"]]
        },
        "Parameters": {
          "ELBSecurityGroupList": {"Fn::GetAtt": ["SecurityGroup", "Outputs.outputPublicWebSecurityGroup"]},
          "VPCID": {"Fn::GetAtt": ["BaseNetwork", "Outputs.outputVPCID"]},
          "ScalingCreateTimeOut": "30M",
          "ELBSubnet": {"Fn::Join": [",", [{"Fn::GetAtt": ["BaseNetwork", "Outputs.outputSubnetPublicAZ1"]}, {"Fn::GetAtt": ["BaseNetwork", "Outputs.outputSubnetPublicAZ2"]}]]},
          "EbsVolumeSize": 20,
          "ScalingNotificationEmail": "noemail@domain.com",
          "AppSubnet": {"Fn::Join": [",", [{"Fn::GetAtt": ["BaseNetwork", "Outputs.outputSubnetPrivateAZ1"]}, {"Fn::GetAtt": ["BaseNetwork", "Outputs.outputSubnetPrivateAZ2"]}]]},
          "ImageId": {"Ref": "App1ImageId"},
          "KeyName": "CircleCI",
          "ASGSecurityGroupList": {"Fn::Join": [",", [{"Fn::GetAtt": ["SecurityGroup", "Outputs.outputPrivateWebSecurityGroup"]}, {"Fn::GetAtt": ["SecurityGroup", "Outputs.outputPrivateSSHSecurityGroup"]}]]},
          "ScalingMin": 1,
          "ScalingMax": 2,
          "APPGroupName": "App1"
        }
      }
    },
    "SecurityGroup": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": ["/", ["https://s3.amazonaws.com", {"Ref": "S3TemplateBucketName"}, "SecurityGroup.template"]]
        },
        "Parameters": {
          "VPCID": {"Fn::GetAtt": ["BaseNetwork", "Outputs.outputVPCID"]}
        }
      }
    },
    "App2": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": ["/", ["https://s3.amazonaws.com", {"Ref": "S3TemplateBucketName"}, "Ubuntu1404ASG.template"]]
        },
        "Parameters": {
          "ELBSecurityGroupList": {"Fn::GetAtt": ["SecurityGroup", "Outputs.outputPublicWebSecurityGroup"]},
          "VPCID": {"Fn::GetAtt": ["BaseNetwork", "Outputs.outputVPCID"]},
          "ScalingCreateTimeOut": "30M",
          "ELBSubnet": {"Fn::Join": [",", [{"Fn::GetAtt": ["BaseNetwork", "Outputs.outputSubnetPublicAZ1"]}, {"Fn::GetAtt": ["BaseNetwork", "Outputs.outputSubnetPublicAZ2"]}]]},
          "EbsVolumeSize": 20,
          "ScalingNotificationEmail": "noemail@domain.com",
          "AppSubnet": {"Fn::Join": [",", [{"Fn::GetAtt": ["BaseNetwork", "Outputs.outputSubnetPrivateAZ1"]}, {"Fn::GetAtt": ["BaseNetwork", "Outputs.outputSubnetPrivateAZ2"]}]]},
          "ImageId": {"Ref": "App2ImageId"},
          "KeyName": "CircleCI",
          "ASGSecurityGroupList": {"Fn::Join": [",", [{"Fn::GetAtt": ["SecurityGroup", "Outputs.outputPrivateWebSecurityGroup"]}, {"Fn::GetAtt": ["SecurityGroup", "Outputs.outputPrivateSSHSecurityGroup"]}]]},
          "ScalingMin": 1,
          "ScalingMax": 2,
          "APPGroupName": "App2"
        }
      }
    }
  },
  "Outputs": {
    "outputBaseNetwork": {
      "Value": {
        "Ref": "BaseNetwork"
      }
    },
    "outputApp2": {
      "Value": {
        "Ref": "App2"
      }
    },
    "outputSecurityGroup": {
      "Value": {
        "Ref": "SecurityGroup"
      }
    },
    "outputApp3": {
      "Value": {
        "Ref": "App3"
      }
    },
    "outputApp1": {
      "Value": {
        "Ref": "App1"
      }
    }
  }
}